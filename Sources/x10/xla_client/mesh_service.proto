// Copyright 2020 TensorFlow Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package xla.service.grpc;

import "tensorflow/core/protobuf/tpu/topology.proto";

message Device {
  required string local_name = 1;
  required string global_name = 2;
}

message Worker {
  required string name = 1;
  required int32 task_no = 2;
  required string address = 3;
  repeated Device devices = 4;
}

message Config {
  optional tensorflow.tpu.TopologyProto proto = 1;
  repeated Worker workers = 2;
  required int64 mesh_size = 3;
}

message GetConfigRequest {}

message GetConfigResponse {
  required Config config = 1;
}

message RendezvousRequest {
  required string tag = 1;
  required bytes payload = 2;
  required uint32 ordinal = 3;
  repeated uint32 replicas = 4;
}

message RendezvousResponse {
  repeated bytes payloads = 1;
}

message GetNcclUniqueUidRequest {
  repeated uint32 replicas = 1;
}

message GetNcclUniqueUidResponse {
  optional bytes uid = 1;
}

service MeshService {
  rpc GetConfig(GetConfigRequest) returns (GetConfigResponse) {}
  rpc Rendezvous(RendezvousRequest) returns (RendezvousResponse) {}
  rpc GetNcclUniqueUid(GetNcclUniqueUidRequest) returns (GetNcclUniqueUidResponse) {}
}
